// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: transactions.sql

package gen

import (
	"context"
)

const getRecentTransactions = `-- name: GetRecentTransactions :many
SELECT id, user_id, order_id, transaction_date, amount, payment_method, status, created_at, updated_at
FROM transactions
ORDER BY transaction_date DESC
LIMIT $1
`

func (q *Queries) GetRecentTransactions(ctx context.Context, limit int32) ([]Transaction, error) {
	rows, err := q.db.Query(ctx, getRecentTransactions, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Transaction
	for rows.Next() {
		var i Transaction
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.OrderID,
			&i.TransactionDate,
			&i.Amount,
			&i.PaymentMethod,
			&i.Status,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
